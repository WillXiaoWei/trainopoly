{"version":3,"sources":["../../../../assets/Script/assets/Script/mainSingleGame.js"],"names":["cc","Class","extends","Component","properties","progressBar","ProgressBar","questions","level","scores","currentQuestion","question","RichText","currentIndex","onLoad","log","start","that","loader","loadRes","err","res","json","progressBarLocation","find","getComponent","progress","next_level","console","i","buttonName","buttonLocation","nodeButton","Button","nodeButtonNode","enabled","opacity","currentLevelQuestions","random_index","questionLocation","string","fontSize","answerLength","answer","length","disabledColor","color","TRANSPARENT","buttonLabelLocation","nodeButtonLabel","Label","node","on","event","correctButtonName","correctButtonLocation","correctNodeButton","clickEvents","scoreLocation","scoreText","false_callback","customEventData","target","correct_callback","button","Math","floor","random","update","dt"],"mappings":"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","file":"mainSingleGame.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        progressBar: new cc.ProgressBar(),\n        questions:[],\n        level: 0,\n        scores: 0,\n        currentQuestion:{},\n        question:cc.RichText,\n        currentIndex:-1\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n      cc.log('main scen')\n\n\n    },\n\n    start () {\n        var that = this\n        cc.loader.loadRes( 'questions.json', function( err, res)\n        {\n            //console.log(res.json.questions)\n            that.questions = res.json.questions\n            cc.log(that.questions);\n            //randomly fetch a question at current level\n            let progressBarLocation = \"Canvas/progressBar\";\n            that.progressBar = cc.find(progressBarLocation).getComponent(cc.ProgressBar);\n            that.progressBar.progress = 0\n\n            // let currentLevelQuestions = that.questions[that.level]\n            // let currentIndex = Math.floor(Math.random() * currentLevelQuestions.length)\n            // let currentQuestion = currentLevelQuestions[currentIndex]\n            // that.currentQuestion = currentLevelQuestions[currentIndex]\n            //\n            // let questionLocation = \"Canvas/question\"\n            // that.question = cc.find(questionLocation).getComponent(cc.RichText);\n            // that.question.string = currentQuestion[\"questionText\"]\n            // that.question.fontSize = 13\n            //\n            // let answerLength = currentQuestion.answer.length\n            // for(var i = answerLength; i <= 3; i ++){\n            //     let buttonName = \"answer_\" + i;\n            //     let buttonLocation = \"Canvas/\" + buttonName\n            //     let nodeButton = cc.find(buttonLocation).getComponent(cc.Button)\n            //     let nodeButtonNode = cc.find(buttonLocation)\n            //     nodeButton.enabled = false\n            //     nodeButton.disabledColor = cc.color.TRANSPARENT\n            //     nodeButtonNode.opacity = 0\n            //     console.log(buttonName)\n            // }\n            //\n            // for(var i = 0; i < answerLength; i ++){\n            //     let buttonName = \"answer_\" + i;\n            //     let buttonLocation = \"Canvas/\" + buttonName\n            //     let theNode = cc.find(buttonLocation)\n            //     let nodeButton = cc.find(buttonLocation).getComponent(cc.Button)\n            //     let buttonLabelLocation = buttonLocation + \"/Label\"\n            //     let nodeButtonLabel = cc.find(buttonLabelLocation).getComponent(cc.Label)\n            //     nodeButtonLabel.string = currentQuestion.answer[i]\n            //\n            //\n            //     var clickEventHandler = new cc.Component.EventHandler();\n            //     clickEventHandler.target = theNode; //这个 node 节点是你的事件处理代码组件所属的节点\n            //     clickEventHandler.component = \"mainSingleGame\";//这个是代码文件名\n            //     clickEventHandler.handler = \"false_callback\";\n            //\n            //     nodeButton.clickEvents.push(clickEventHandler);\n            //\n            // }\n            //\n            // let correctButtonName = \"answer_\" + currentQuestion[\"correctAnswer\"]\n            // let correctButtonLocation = \"Canvas/\" + correctButtonName\n            // let correctNodeButton = cc.find(correctButtonLocation).getComponent(cc.Button)\n            // console.log(correctNodeButton.clickEvents)\n            //\n            // correctNodeButton.clickEvents[0].handler = \"correct_callback\"\n\n\n            that.next_level()\n\n        });\n\n    },\n    next_level:function(){\n        console.log(\"new level!!!!\")\n        //enable all the button\n        for(var i = 0; i <=3;i++){\n            let buttonName = \"answer_\" + i;\n            let buttonLocation = \"Canvas/\" + buttonName\n            let nodeButton = cc.find(buttonLocation).getComponent(cc.Button)\n            let nodeButtonNode = cc.find(buttonLocation)\n            nodeButton.enabled = true\n            nodeButtonNode.opacity = 255\n        }\n\n        var that = this\n\n        //randomly fetch new question at current level\n        let currentLevelQuestions = that.questions[that.level]\n\n        that.random_index(currentLevelQuestions)\n\n\n        let currentQuestion = currentLevelQuestions[that.currentIndex]\n        that.currentQuestion = currentLevelQuestions[that.currentIndex]\n        let questionLocation = \"Canvas/question\"\n        that.question = cc.find(questionLocation).getComponent(cc.RichText);\n        that.question.string = currentQuestion[\"questionText\"]\n        that.question.fontSize = 13\n        //disable used button\n        let answerLength = currentQuestion.answer.length\n        for(var i = answerLength; i <= 3; i ++){\n            let buttonName = \"answer_\" + i;\n            let buttonLocation = \"Canvas/\" + buttonName\n            let nodeButton = cc.find(buttonLocation).getComponent(cc.Button)\n            let nodeButtonNode = cc.find(buttonLocation)\n            nodeButton.enabled = false\n            nodeButton.disabledColor = cc.color.TRANSPARENT\n            nodeButtonNode.opacity = 0\n            console.log(buttonName)\n        }\n\n        //set up button behavior\n        for(var i = 0; i < answerLength; i ++){\n            let buttonName = \"answer_\" + i;\n            let buttonLocation = \"Canvas/\" + buttonName\n            let nodeButton = cc.find(buttonLocation).getComponent(cc.Button)\n            let buttonLabelLocation = buttonLocation + \"/Label\"\n            let nodeButtonLabel = cc.find(buttonLabelLocation).getComponent(cc.Label)\n            nodeButtonLabel.string = currentQuestion.answer[i]\n\n            // nodeButton.clickEvents[0].handler = \"false_callback\"\n\n            nodeButton.node.on('click', function(event){\n                that.next_level()\n            });\n\n\n        }\n\n        let correctButtonName = \"answer_\" + currentQuestion[\"correctAnswer\"]\n        let correctButtonLocation = \"Canvas/\" + correctButtonName\n        let correctNodeButton = cc.find(correctButtonLocation).getComponent(cc.Button)\n        //correctNodeButton.clickEvents[0].handler = \"correct_callback\"\n\n\n        correctNodeButton.node.on('click', function(event){\n            console.log(\"butttonn hitttted\")\n            that.scores = that.scores + 1\n            if(that.scores >= 2){\n                that.level = 1\n            }\n            that.next_level()\n        });\n\n        console.log(correctNodeButton.clickEvents)\n        that.progressBar.progress = 0\n\n        let scoreLocation = \"Canvas/score\"\n        let scoreText = cc.find(scoreLocation).getComponent(cc.RichText)\n        scoreText.string = \"Score:\" + that.scores\n\n    },\n    false_callback:function (event, customEventData) {\n        console.log(\"hahaha\")\n        var node = event.target;\n        var nodeButton = node.getComponent(cc.Button);\n        this.next_level()\n\n    },\n    correct_callback:function (event, customEventData) {\n        console.log(\"hahahah\")\n        var node = event.target;\n        var button = node.getComponent(cc.Button);\n        this.scores = this.scores + 1\n        if(this.scores >= 2){\n            this.level = 1\n        }\n        this.next_level()\n    },\n\n    random_index:function(currentLevelQuestions){\n        while(true){\n            let currentIndex =  Math.floor(Math.random() * currentLevelQuestions.length)\n            if(currentIndex != this.currentIndex){\n                this.currentIndex = currentIndex\n                break\n            }\n        }\n    },\n\n     update (dt) {\n         // let progressBarLocation = \"Canvas/progressBar\";\n         // let progressBar = cc.find(progressBarLocation).getComponent(cc.ProgressBar);\n         console.log(this.level)\n         var progress = this.progressBar.progress;\n         if (progress >= 0 && progress < 1) {\n             if(this.level == 0) {\n                 progress += dt / (10);\n             }else{\n                 progress += dt / 5\n             }\n         }\n         else if(progress>=1){\n             progress = 0\n             this.next_level()\n         }\n         this.progressBar.progress = progress;\n\n\n     },\n});\n"]}